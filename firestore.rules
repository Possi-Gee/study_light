
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is a teacher
    function isTeacher() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }

    // Users can create their own profile, and update their own data.
    // Any authenticated user can read user profiles (needed for student lists).
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }

    // Teachers can manage subjects
    match /subjects/{subjectId} {
       allow read: if request.auth != null;
       allow write: if isTeacher();
       
       // Teachers can manage notes within subjects
       match /notes/{noteId} {
         allow read: if request.auth != null;
         allow write: if isTeacher();
       }
    }
    
    // Teachers can manage quizzes
    match /quizzes/{quizId} {
       allow read: if request.auth != null;
       allow write: if isTeacher();
    }
    
    // Teachers can manage announcements
    match /announcements/{announcementId} {
      allow read: if request.auth != null;
      allow create, delete: if isTeacher();
    }
    
    // Students can create submissions for quizzes, but cannot read all submissions
    // Teachers can read all submissions for their quizzes
    match /submissions/{submissionId} {
        allow read: if isTeacher() || request.auth.uid == resource.data.studentId;
        allow create: if request.auth.uid == request.resource.data.studentId;
        allow update, delete: if false; 
    }
  }
}
