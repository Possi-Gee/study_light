
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to get user's role from the users collection
    function getRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }

    // Users can create their own profile, and can only update/delete their own.
    // All authenticated users can read user profiles.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;
    }

    // Teachers can manage subjects, notes, quizzes, and announcements.
    // Students can only read them.
    match /subjects/{subjectId} {
      allow read: if request.auth != null;
      allow create, update, delete: if getRole(request.auth.uid) == 'teacher';

      match /notes/{noteId} {
        allow read: if request.auth != null;
        allow create, update, delete: if getRole(request.auth.uid) == 'teacher';
      }
    }
    
    match /quizzes/{quizId} {
       allow read: if request.auth != null;
       allow create, update, delete: if getRole(request.auth.uid) == 'teacher';
    }

    match /announcements/{announcementId} {
       allow read: if request.auth != null;
       allow create, update, delete: if getRole(request.auth.uid) == 'teacher';
    }

    // Students can create their own submissions.
    // Teachers can read all submissions.
    match /submissions/{submissionId} {
        allow read: if getRole(request.auth.uid) == 'teacher';
        allow create: if request.auth.uid == request.resource.data.studentId;
        allow update, delete: if false; // Submissions are immutable
    }
  }
}
