rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to get the requesting user's role from the 'users' collection.
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    // Helper function to check if the user is authenticated.
    function isSignedIn() {
      return request.auth != null;
    }

    // Users can create their own profile, and can only update/delete their own profile.
    // Any authenticated user can view other user profiles.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;
    }

    // Teachers can create/read/update/delete subjects and the notes within them.
    // Students can only read subjects and notes.
    match /subjects/{subjectId}/{documents=**} {
      allow read: if isSignedIn();
      allow write: if getUserRole() == 'teacher';
    }

    // Teachers can create/read/update/delete quizzes.
    // Students can only read quizzes.
    match /quizzes/{quizId} {
      allow read: if isSignedIn();
      allow write: if getUserRole() == 'teacher';
    }
    
    // Teachers can create/read/delete announcements.
    // Students can only read announcements.
    match /announcements/{announcementId} {
        allow read: if isSignedIn();
        allow write: if getUserRole() == 'teacher';
    }

    // Authenticated users (students) can create their own submissions.
    // Teachers can read all submissions.
    match /submissions/{submissionId} {
        allow read: if getUserRole() == 'teacher';
        allow create: if isSignedIn();
        allow update, delete: if false; // Submissions are immutable
    }
  }
}
